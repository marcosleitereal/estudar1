#!/usr/bin/env npx tsx

import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o configuradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

/**
 * Popula o banco com conte√∫do jur√≠dico usando as tabelas existentes
 */
async function populateLegalContent(): Promise<void> {
  console.log('üöÄ Iniciando popula√ß√£o de conte√∫do jur√≠dico...');
  
  try {
    // 1. Criar fontes (sources)
    await createSources();
    
    // 2. Criar leis principais
    await createMainLaws();
    
    // 3. Criar artigos da Constitui√ß√£o
    await createConstitutionArticles();
    
    // 4. Criar s√∫mulas
    await createSumulas();
    
    // 5. Criar enunciados
    await createEnunciados();
    
    console.log('‚úÖ Popula√ß√£o de conte√∫do jur√≠dico conclu√≠da!');
    
  } catch (error) {
    console.error('‚ùå Erro durante a popula√ß√£o:', error);
    throw error;
  }
}

/**
 * Cria fontes de dados
 */
async function createSources(): Promise<void> {
  console.log('üìö Criando fontes de dados...');
  
  const sources = [
    {
      kind: 'constitui√ß√£o',
      title: 'Constitui√ß√£o da Rep√∫blica Federativa do Brasil de 1988',
      org: 'Planalto',
      year: 1988,
      url: 'http://www.planalto.gov.br/ccivil_03/constituicao/constituicao.htm',
      version_label: 'Texto consolidado'
    },
    {
      kind: 'c√≥digo',
      title: 'C√≥digo Civil',
      org: 'Planalto',
      year: 2002,
      url: 'http://www.planalto.gov.br/ccivil_03/leis/2002/l10406.htm',
      version_label: 'Lei n¬∫ 10.406/2002'
    },
    {
      kind: 'c√≥digo',
      title: 'C√≥digo Penal',
      org: 'Planalto',
      year: 1940,
      url: 'http://www.planalto.gov.br/ccivil_03/decreto-lei/del2848.htm',
      version_label: 'Decreto-Lei n¬∫ 2.848/1940'
    },
    {
      kind: 's√∫mula',
      title: 'S√∫mulas do Supremo Tribunal Federal',
      org: 'STF',
      year: 2024,
      url: 'https://portal.stf.jus.br/jurisprudencia/',
      version_label: 'Colet√¢nea atualizada'
    },
    {
      kind: 's√∫mula',
      title: 'S√∫mulas do Superior Tribunal de Justi√ßa',
      org: 'STJ',
      year: 2024,
      url: 'https://www.stj.jus.br/',
      version_label: 'Colet√¢nea atualizada'
    },
    {
      kind: 'enunciado',
      title: 'Enunciados do Conselho da Justi√ßa Federal',
      org: 'CJF',
      year: 2024,
      url: 'https://www.cjf.jus.br/',
      version_label: 'Jornadas de Direito Civil'
    }
  ];

  for (const source of sources) {
    const { data, error } = await supabase
      .from('sources')
      .upsert(source)
      .select('id')
      .single();

    if (error) {
      console.error(`‚ùå Erro ao criar fonte ${source.title}:`, error);
    } else {
      console.log(`‚úÖ Fonte ${source.title} criada com ID: ${data.id}`);
      // Armazenar IDs para uso posterior
      if (source.kind === 'constitui√ß√£o') {
        (global as any).cfSourceId = data.id;
      } else if (source.kind === 'c√≥digo' && source.title.includes('Civil')) {
        (global as any).ccSourceId = data.id;
      } else if (source.kind === 'c√≥digo' && source.title.includes('Penal')) {
        (global as any).cpSourceId = data.id;
      } else if (source.org === 'STF') {
        (global as any).stfSourceId = data.id;
      } else if (source.org === 'STJ') {
        (global as any).stjSourceId = data.id;
      } else if (source.org === 'CJF') {
        (global as any).cjfSourceId = data.id;
      }
    }
  }
}

/**
 * Cria leis principais
 */
async function createMainLaws(): Promise<void> {
  console.log('üìñ Criando leis principais...');
  
  const laws = [
    {
      source_id: (global as any).cfSourceId,
      ref: 'CF/88',
      hierarchy: { tipo: 'constitui√ß√£o', titulo: 'Constitui√ß√£o Federal' },
      text_plain: 'Constitui√ß√£o da Rep√∫blica Federativa do Brasil de 1988',
      effective_from: '1988-10-05',
      is_current: true
    },
    {
      source_id: (global as any).ccSourceId,
      ref: 'CC/2002',
      hierarchy: { tipo: 'c√≥digo', titulo: 'C√≥digo Civil' },
      text_plain: 'C√≥digo Civil - Lei n¬∫ 10.406, de 10 de janeiro de 2002',
      effective_from: '2003-01-11',
      is_current: true
    },
    {
      source_id: (global as any).cpSourceId,
      ref: 'CP/1940',
      hierarchy: { tipo: 'c√≥digo', titulo: 'C√≥digo Penal' },
      text_plain: 'C√≥digo Penal - Decreto-Lei n¬∫ 2.848, de 7 de dezembro de 1940',
      effective_from: '1942-01-01',
      is_current: true
    }
  ];

  for (const law of laws) {
    const { data, error } = await supabase
      .from('laws')
      .upsert(law)
      .select('id')
      .single();

    if (error) {
      console.error(`‚ùå Erro ao criar lei ${law.ref}:`, error);
    } else {
      console.log(`‚úÖ Lei ${law.ref} criada com ID: ${data.id}`);
      // Armazenar IDs para uso posterior
      if (law.ref === 'CF/88') {
        (global as any).cfLawId = data.id;
      } else if (law.ref === 'CC/2002') {
        (global as any).ccLawId = data.id;
      } else if (law.ref === 'CP/1940') {
        (global as any).cpLawId = data.id;
      }
    }
  }
}

/**
 * Cria artigos da Constitui√ß√£o Federal
 */
async function createConstitutionArticles(): Promise<void> {
  console.log('üèõÔ∏è Criando artigos da Constitui√ß√£o Federal...');
  
  const articles = [
    {
      law_id: (global as any).cfLawId,
      ref: 'CF/88 art. 1¬∫',
      content: 'Art. 1¬∫ A Rep√∫blica Federativa do Brasil, formada pela uni√£o indissol√∫vel dos Estados e Munic√≠pios e do Distrito Federal, constitui-se em Estado Democr√°tico de Direito e tem como fundamentos: I - a soberania; II - a cidadania; III - a dignidade da pessoa humana; IV - os valores sociais do trabalho e da livre iniciativa; V - o pluralismo pol√≠tico. Par√°grafo √∫nico. Todo o poder emana do povo, que o exerce por meio de representantes eleitos ou diretamente, nos termos desta Constitui√ß√£o.',
      meta: {
        article_number: 'Art. 1¬∫',
        title: 'Fundamentos da Rep√∫blica Federativa do Brasil',
        keywords: ['soberania', 'cidadania', 'dignidade', 'democracia', 'fundamentos']
      }
    },
    {
      law_id: (global as any).cfLawId,
      ref: 'CF/88 art. 2¬∫',
      content: 'Art. 2¬∫ S√£o Poderes da Uni√£o, independentes e harm√¥nicos entre si, o Legislativo, o Executivo e o Judici√°rio.',
      meta: {
        article_number: 'Art. 2¬∫',
        title: 'Separa√ß√£o dos Poderes',
        keywords: ['separa√ß√£o', 'poderes', 'legislativo', 'executivo', 'judici√°rio']
      }
    },
    {
      law_id: (global as any).cfLawId,
      ref: 'CF/88 art. 3¬∫',
      content: 'Art. 3¬∫ Constituem objetivos fundamentais da Rep√∫blica Federativa do Brasil: I - construir uma sociedade livre, justa e solid√°ria; II - garantir o desenvolvimento nacional; III - erradicar a pobreza e a marginaliza√ß√£o e reduzir as desigualdades sociais e regionais; IV - promover o bem de todos, sem preconceitos de origem, ra√ßa, sexo, cor, idade e quaisquer outras formas de discrimina√ß√£o.',
      meta: {
        article_number: 'Art. 3¬∫',
        title: 'Objetivos Fundamentais da Rep√∫blica',
        keywords: ['objetivos', 'sociedade', 'desenvolvimento', 'igualdade', 'discrimina√ß√£o']
      }
    },
    {
      law_id: (global as any).cfLawId,
      ref: 'CF/88 art. 5¬∫',
      content: 'Art. 5¬∫ Todos s√£o iguais perante a lei, sem distin√ß√£o de qualquer natureza, garantindo-se aos brasileiros e aos estrangeiros residentes no Pa√≠s a inviolabilidade do direito √† vida, √† liberdade, √† igualdade, √† seguran√ßa e √† propriedade, nos termos seguintes: I - homens e mulheres s√£o iguais em direitos e obriga√ß√µes, nos termos desta Constitui√ß√£o; II - ningu√©m ser√° obrigado a fazer ou deixar de fazer alguma coisa sen√£o em virtude de lei; III - ningu√©m ser√° submetido a tortura nem a tratamento desumano ou degradante; IV - √© livre a manifesta√ß√£o do pensamento, sendo vedado o anonimato; V - √© assegurado o direito de resposta, proporcional ao agravo, al√©m da indeniza√ß√£o por dano material, moral ou √† imagem...',
      meta: {
        article_number: 'Art. 5¬∫',
        title: 'Direitos e Deveres Individuais e Coletivos',
        keywords: ['direitos fundamentais', 'igualdade', 'liberdade', 'seguran√ßa', 'propriedade']
      }
    },
    {
      law_id: (global as any).cfLawId,
      ref: 'CF/88 art. 18',
      content: 'Art. 18. A organiza√ß√£o pol√≠tico-administrativa da Rep√∫blica Federativa do Brasil compreende a Uni√£o, os Estados, o Distrito Federal e os Munic√≠pios, todos aut√¥nomos, nos termos desta Constitui√ß√£o.',
      meta: {
        article_number: 'Art. 18',
        title: 'Organiza√ß√£o Pol√≠tico-Administrativa',
        keywords: ['federa√ß√£o', 'uni√£o', 'estados', 'munic√≠pios', 'autonomia']
      }
    }
  ];

  for (const article of articles) {
    const { error } = await supabase
      .from('law_chunks')
      .upsert(article);

    if (error) {
      console.error(`‚ùå Erro ao criar ${article.meta.article_number}:`, error);
    } else {
      console.log(`‚úÖ ${article.meta.article_number} criado`);
    }
  }
}

/**
 * Cria s√∫mulas
 */
async function createSumulas(): Promise<void> {
  console.log('‚öñÔ∏è Criando s√∫mulas...');
  
  const sumulas = [
    {
      tribunal: 'STF',
      numero: 11,
      texto: 'S√≥ √© l√≠cito o uso de algemas em casos de resist√™ncia e de fundado receio de fuga ou de perigo √† integridade f√≠sica pr√≥pria ou alheia, por parte do preso ou de terceiros, justificada a excepcionalidade por escrito, sob pena de responsabilidade disciplinar, civil e penal do agente ou da autoridade e de nulidade da pris√£o ou do ato processual a que se refere, sem preju√≠zo da responsabilidade civil do Estado.',
      fonte_url: 'https://portal.stf.jus.br/jurisprudencia/sumulaVinculante.asp?vSumula=11'
    },
    {
      tribunal: 'STF',
      numero: 13,
      texto: 'A nomea√ß√£o de c√¥njuge, companheiro ou parente em linha reta, colateral ou por afinidade, at√© o terceiro grau, inclusive, da autoridade nomeante ou de servidor da mesma pessoa jur√≠dica investido em cargo de dire√ß√£o, chefia ou assessoramento, para o exerc√≠cio de cargo em comiss√£o ou de confian√ßa ou, ainda, de fun√ß√£o gratificada na administra√ß√£o p√∫blica direta e indireta em qualquer dos poderes da Uni√£o, dos Estados, do Distrito Federal e dos Munic√≠pios, compreendido o ajuste mediante designa√ß√µes rec√≠procas, viola a Constitui√ß√£o Federal.',
      fonte_url: 'https://portal.stf.jus.br/jurisprudencia/sumulaVinculante.asp?vSumula=13'
    },
    {
      tribunal: 'STF',
      numero: 473,
      texto: 'A administra√ß√£o pode anular seus pr√≥prios atos, quando eivados de v√≠cios que os tornam ilegais, porque deles n√£o se originam direitos; ou revog√°-los, por motivo de conveni√™ncia ou oportunidade, respeitados os direitos adquiridos, e ressalvada, em todos os casos, a aprecia√ß√£o judicial.',
      fonte_url: 'https://portal.stf.jus.br/jurisprudencia/sumula.asp?vSumula=473'
    },
    {
      tribunal: 'STJ',
      numero: 284,
      texto: 'A inser√ß√£o do nome do devedor no SPC e no SERASA constitui pr√°tica comercial l√≠cita e exerc√≠cio regular de direito.',
      fonte_url: 'https://www.stj.jus.br/docs_internet/revista/eletronica/stj-revista-sumulas-284.pdf'
    },
    {
      tribunal: 'STJ',
      numero: 385,
      texto: 'Da anota√ß√£o irregular em cadastro de prote√ß√£o ao cr√©dito, n√£o cabe indeniza√ß√£o por dano moral, quando preexistente leg√≠tima inscri√ß√£o, ressalvado o direito ao cancelamento.',
      fonte_url: 'https://www.stj.jus.br/docs_internet/revista/eletronica/stj-revista-sumulas-385.pdf'
    }
  ];

  for (const sumula of sumulas) {
    const { error } = await supabase
      .from('sumulas')
      .upsert(sumula);

    if (error) {
      console.error(`‚ùå Erro ao criar S√∫mula ${sumula.numero} ${sumula.tribunal}:`, error);
    } else {
      console.log(`‚úÖ S√∫mula ${sumula.numero} ${sumula.tribunal} criada`);
    }
  }
}

/**
 * Cria enunciados
 */
async function createEnunciados(): Promise<void> {
  console.log('üìã Criando enunciados...');
  
  const enunciados = [
    {
      org: 'CJF',
      numero: 1,
      texto: 'A dignidade da pessoa humana na bio√©tica n√£o coincide com a santidade da vida.',
      fonte_url: 'https://www.cjf.jus.br/enunciados/enunciado/142'
    },
    {
      org: 'CJF',
      numero: 2,
      texto: 'A disposi√ß√£o gratuita do pr√≥prio corpo, no todo ou em parte, para depois da morte, com objetivo cient√≠fico, ou altru√≠stico, √© cl√°usula geral de tutela e promo√ß√£o da pessoa humana.',
      fonte_url: 'https://www.cjf.jus.br/enunciados/enunciado/277'
    },
    {
      org: 'CJF',
      numero: 3,
      texto: 'O direito √† inviolabilidade da intimidade e da vida privada n√£o impede a divulga√ß√£o de dados sobre a pessoa quando necess√°rios √† seguran√ßa da sociedade e do Estado.',
      fonte_url: 'https://www.cjf.jus.br/enunciados/enunciado/404'
    }
  ];

  for (const enunciado of enunciados) {
    const { error } = await supabase
      .from('enunciados')
      .upsert(enunciado);

    if (error) {
      console.error(`‚ùå Erro ao criar Enunciado ${enunciado.numero} ${enunciado.org}:`, error);
    } else {
      console.log(`‚úÖ Enunciado ${enunciado.numero} ${enunciado.org} criado`);
    }
  }
}

/**
 * Fun√ß√£o principal
 */
async function main(): Promise<void> {
  try {
    await populateLegalContent();
    console.log('üéâ Popula√ß√£o conclu√≠da com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro durante a popula√ß√£o:', error);
    process.exit(1);
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  main();
}

