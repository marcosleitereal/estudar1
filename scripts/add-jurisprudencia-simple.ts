#!/usr/bin/env npx tsx

import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o configuradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

/**
 * Adiciona jurisprud√™ncia usando a estrutura existente
 */
async function adicionarJurisprudencia(): Promise<void> {
  console.log('üöÄ Adicionando jurisprud√™ncia...');
  
  try {
    // Primeiro, criar uma fonte para jurisprud√™ncia
    const { data: fonte, error: fonteError } = await supabase
      .from('sources')
      .upsert({
        name: 'Jurisprudencia dos Tribunais Superiores',
        type: 'jurisprudence',
        url: 'https://jurisprudencia.stf.jus.br/',
        description: 'Coletanea de jurisprudencia do STF e STJ'
      })
      .select('id')
      .single();

    if (fonteError) {
      console.error('‚ùå Erro ao criar fonte:', fonteError);
      return;
    }

    console.log(`‚úÖ Fonte criada: ${fonte.id}`);

    // Criar uma "lei" para jurisprud√™ncia
    const { data: lei, error: leiError } = await supabase
      .from('laws')
      .upsert({
        source_id: fonte.id,
        title: 'Jurisprud√™ncia STF e STJ',
        content: 'Colet√¢nea de decis√µes dos tribunais superiores',
        hierarchy_level: 1
      })
      .select('id')
      .single();

    if (leiError) {
      console.error('‚ùå Erro ao criar lei:', leiError);
      return;
    }

    console.log(`‚úÖ Lei criada: ${lei.id}`);

    // Adicionar jurisprud√™ncia como law_chunks
    const jurisprudencias = [
      {
        law_id: lei.id,
        ref: 'STF ADI 4277',
        content: 'ADI 4277 - ARGUI√á√ÉO DE DESCUMPRIMENTO DE PRECEITO FUNDAMENTAL (ADPF). UNI√ÉO HOMOAFETIVA E SEU RECONHECIMENTO COMO INSTITUTO JUR√çDICO. Rel. Min. Ayres Britto. Julgamento: 05/05/2011. Encampa√ß√£o da jurisprud√™ncia do Tribunal no sentido da possibilidade de reconhecimento de uni√£o est√°vel entre pessoas do mesmo sexo como entidade familiar.'
      },
      {
        law_id: lei.id,
        ref: 'STF RE 898450',
        content: 'RE 898450 - RECURSO EXTRAORDIN√ÅRIO. DIREITO CONSTITUCIONAL E TRIBUT√ÅRIO. LEGITIMIDADE DA COBRAN√áA DE CONTRIBUI√á√ÉO PREVIDENCI√ÅRIA DE SERVIDORES P√öBLICOS INATIVOS E PENSIONISTAS. Rel. Min. Luiz Fux. Julgamento: 13/08/2020. Constitucionalidade da cobran√ßa de contribui√ß√£o previdenci√°ria de servidores p√∫blicos inativos e pensionistas, nos termos da EC 41/2003.'
      },
      {
        law_id: lei.id,
        ref: 'STJ REsp 1.657.156',
        content: 'REsp 1.657.156 - DIREITO CIVIL. RESPONSABILIDADE CIVIL. DANO MORAL. INSCRI√á√ÉO INDEVIDA EM √ìRG√ÉO DE PROTE√á√ÉO AO CR√âDITO. Rel. Min. Nancy Andrighi. Julgamento: 15/05/2018. A fixa√ß√£o do valor da indeniza√ß√£o por dano moral deve observar os princ√≠pios da proporcionalidade e razoabilidade, considerando a gravidade da ofensa, a condi√ß√£o econ√¥mica das partes e o car√°ter pedag√≥gico da san√ß√£o.'
      },
      {
        law_id: lei.id,
        ref: 'STJ AgInt no REsp 1.896.175',
        content: 'AgInt no REsp 1.896.175 - PROCESSUAL CIVIL. EXECU√á√ÉO FISCAL. PENHORA. BEM DE FAM√çLIA. IMPENHORABILIDADE. Rel. Min. Marco Aur√©lio Bellizze. Julgamento: 23/03/2021. O bem de fam√≠lia √© impenhor√°vel, nos termos da Lei n¬∫ 8.009/90, n√£o se aplicando a exce√ß√£o prevista no art. 3¬∫, IV, da referida lei aos cr√©ditos tribut√°rios.'
      }
    ];

    for (const juris of jurisprudencias) {
      const { error } = await supabase
        .from('law_chunks')
        .upsert(juris);

      if (error) {
        console.error(`‚ùå Erro ao salvar ${juris.ref}:`, error);
      } else {
        console.log(`‚úÖ ${juris.ref} salvo`);
      }
    }

    console.log('‚úÖ Jurisprud√™ncia adicionada com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro durante a adi√ß√£o:', error);
    throw error;
  }
}

/**
 * Fun√ß√£o principal
 */
async function main(): Promise<void> {
  try {
    await adicionarJurisprudencia();
    console.log('üéâ Processo conclu√≠do com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro durante o processo:', error);
    process.exit(1);
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  main();
}

