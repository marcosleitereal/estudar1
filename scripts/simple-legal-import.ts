#!/usr/bin/env npx tsx

import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o configuradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

/**
 * Importa dados jur√≠dicos essenciais
 */
async function importEssentialLegalData(): Promise<void> {
  console.log('üöÄ Iniciando importa√ß√£o de dados jur√≠dicos essenciais...');
  
  try {
    // 1. Importar Constitui√ß√£o Federal (artigos principais)
    await importConstitutionArticles();
    
    // 2. Importar S√∫mulas STF/STJ (principais)
    await importMainSumulas();
    
    // 3. Importar C√≥digos principais (artigos selecionados)
    await importMainCodes();
    
    console.log('‚úÖ Importa√ß√£o de dados jur√≠dicos essenciais conclu√≠da!');
    
  } catch (error) {
    console.error('‚ùå Erro durante a importa√ß√£o:', error);
    throw error;
  }
}

/**
 * Importa artigos principais da Constitui√ß√£o Federal
 */
async function importConstitutionArticles(): Promise<void> {
  console.log('üèõÔ∏è Importando artigos da Constitui√ß√£o Federal...');
  
  const constitutionArticles = [
    {
      article_number: 'Art. 1¬∫',
      title: 'Fundamentos da Rep√∫blica Federativa do Brasil',
      content: 'A Rep√∫blica Federativa do Brasil, formada pela uni√£o indissol√∫vel dos Estados e Munic√≠pios e do Distrito Federal, constitui-se em Estado Democr√°tico de Direito e tem como fundamentos: I - a soberania; II - a cidadania; III - a dignidade da pessoa humana; IV - os valores sociais do trabalho e da livre iniciativa; V - o pluralismo pol√≠tico. Par√°grafo √∫nico. Todo o poder emana do povo, que o exerce por meio de representantes eleitos ou diretamente, nos termos desta Constitui√ß√£o.'
    },
    {
      article_number: 'Art. 2¬∫',
      title: 'Separa√ß√£o dos Poderes',
      content: 'S√£o Poderes da Uni√£o, independentes e harm√¥nicos entre si, o Legislativo, o Executivo e o Judici√°rio.'
    },
    {
      article_number: 'Art. 3¬∫',
      title: 'Objetivos Fundamentais da Rep√∫blica',
      content: 'Constituem objetivos fundamentais da Rep√∫blica Federativa do Brasil: I - construir uma sociedade livre, justa e solid√°ria; II - garantir o desenvolvimento nacional; III - erradicar a pobreza e a marginaliza√ß√£o e reduzir as desigualdades sociais e regionais; IV - promover o bem de todos, sem preconceitos de origem, ra√ßa, sexo, cor, idade e quaisquer outras formas de discrimina√ß√£o.'
    },
    {
      article_number: 'Art. 4¬∫',
      title: 'Princ√≠pios das Rela√ß√µes Internacionais',
      content: 'A Rep√∫blica Federativa do Brasil rege-se nas suas rela√ß√µes internacionais pelos seguintes princ√≠pios: I - independ√™ncia nacional; II - preval√™ncia dos direitos humanos; III - autodetermina√ß√£o dos povos; IV - n√£o-interven√ß√£o; V - igualdade entre os Estados; VI - defesa da paz; VII - solu√ß√£o pac√≠fica dos conflitos; VIII - rep√∫dio ao terrorismo e ao racismo; IX - coopera√ß√£o entre os povos para o progresso da humanidade; X - concess√£o de asilo pol√≠tico.'
    },
    {
      article_number: 'Art. 5¬∫',
      title: 'Direitos e Deveres Individuais e Coletivos',
      content: 'Todos s√£o iguais perante a lei, sem distin√ß√£o de qualquer natureza, garantindo-se aos brasileiros e aos estrangeiros residentes no Pa√≠s a inviolabilidade do direito √† vida, √† liberdade, √† igualdade, √† seguran√ßa e √† propriedade, nos termos seguintes: I - homens e mulheres s√£o iguais em direitos e obriga√ß√µes, nos termos desta Constitui√ß√£o; II - ningu√©m ser√° obrigado a fazer ou deixar de fazer alguma coisa sen√£o em virtude de lei; III - ningu√©m ser√° submetido a tortura nem a tratamento desumano ou degradante; IV - √© livre a manifesta√ß√£o do pensamento, sendo vedado o anonimato; V - √© assegurado o direito de resposta, proporcional ao agravo, al√©m da indeniza√ß√£o por dano material, moral ou √† imagem...'
    }
  ];

  for (const article of constitutionArticles) {
    const { error } = await supabase
      .from('law_articles')
      .upsert({
        law_id: 'cf_1988',
        article_number: article.article_number,
        title: article.title,
        content: article.content,
        hierarchy_level: 1,
        metadata: {
          source: 'manual_import',
          law_name: 'Constitui√ß√£o Federal',
          imported_at: new Date().toISOString()
        }
      });

    if (error) {
      console.error(`‚ùå Erro ao inserir ${article.article_number}:`, error);
    } else {
      console.log(`‚úÖ ${article.article_number} inserido`);
    }
  }
}

/**
 * Importa s√∫mulas principais do STF e STJ
 */
async function importMainSumulas(): Promise<void> {
  console.log('‚öñÔ∏è Importando s√∫mulas principais...');
  
  const sumulas = [
    // STF Vinculantes
    {
      id: 'stf_vinculante_11',
      number: 11,
      court: 'STF',
      type: 'vinculante',
      title: 'S√∫mula Vinculante 11 - Uso de Algemas',
      content: 'S√≥ √© l√≠cito o uso de algemas em casos de resist√™ncia e de fundado receio de fuga ou de perigo √† integridade f√≠sica pr√≥pria ou alheia, por parte do preso ou de terceiros, justificada a excepcionalidade por escrito, sob pena de responsabilidade disciplinar, civil e penal do agente ou da autoridade e de nulidade da pris√£o ou do ato processual a que se refere, sem preju√≠zo da responsabilidade civil do Estado.',
      source_url: 'https://portal.stf.jus.br/jurisprudencia/sumulaVinculante.asp?vSumula=11'
    },
    {
      id: 'stf_vinculante_13',
      number: 13,
      court: 'STF',
      type: 'vinculante',
      title: 'S√∫mula Vinculante 13 - Nepotismo',
      content: 'A nomea√ß√£o de c√¥njuge, companheiro ou parente em linha reta, colateral ou por afinidade, at√© o terceiro grau, inclusive, da autoridade nomeante ou de servidor da mesma pessoa jur√≠dica investido em cargo de dire√ß√£o, chefia ou assessoramento, para o exerc√≠cio de cargo em comiss√£o ou de confian√ßa ou, ainda, de fun√ß√£o gratificada na administra√ß√£o p√∫blica direta e indireta em qualquer dos poderes da Uni√£o, dos Estados, do Distrito Federal e dos Munic√≠pios, compreendido o ajuste mediante designa√ß√µes rec√≠procas, viola a Constitui√ß√£o Federal.',
      source_url: 'https://portal.stf.jus.br/jurisprudencia/sumulaVinculante.asp?vSumula=13'
    },
    // STF N√£o Vinculantes
    {
      id: 'stf_473',
      number: 473,
      court: 'STF',
      type: 'nao_vinculante',
      title: 'S√∫mula 473 STF - Anula√ß√£o e Revoga√ß√£o de Atos Administrativos',
      content: 'A administra√ß√£o pode anular seus pr√≥prios atos, quando eivados de v√≠cios que os tornam ilegais, porque deles n√£o se originam direitos; ou revog√°-los, por motivo de conveni√™ncia ou oportunidade, respeitados os direitos adquiridos, e ressalvada, em todos os casos, a aprecia√ß√£o judicial.',
      source_url: 'https://portal.stf.jus.br/jurisprudencia/sumula.asp?vSumula=473'
    },
    // STJ
    {
      id: 'stj_284',
      number: 284,
      court: 'STJ',
      type: 'comum',
      title: 'S√∫mula 284 STJ - SPC e SERASA',
      content: 'A inser√ß√£o do nome do devedor no SPC e no SERASA constitui pr√°tica comercial l√≠cita e exerc√≠cio regular de direito.',
      source_url: 'https://www.stj.jus.br/docs_internet/revista/eletronica/stj-revista-sumulas-284.pdf'
    },
    {
      id: 'stj_385',
      number: 385,
      court: 'STJ',
      type: 'comum',
      title: 'S√∫mula 385 STJ - Dano Moral e Inscri√ß√£o Irregular',
      content: 'Da anota√ß√£o irregular em cadastro de prote√ß√£o ao cr√©dito, n√£o cabe indeniza√ß√£o por dano moral, quando preexistente leg√≠tima inscri√ß√£o, ressalvado o direito ao cancelamento.',
      source_url: 'https://www.stj.jus.br/docs_internet/revista/eletronica/stj-revista-sumulas-385.pdf'
    }
  ];

  for (const sumula of sumulas) {
    const { error } = await supabase
      .from('sumulas')
      .upsert({
        id: sumula.id,
        number: sumula.number,
        court: sumula.court,
        type: sumula.type,
        title: sumula.title,
        content: sumula.content,
        source_url: sumula.source_url,
        status: 'ativa',
        metadata: {
          source: 'manual_import',
          imported_at: new Date().toISOString()
        }
      });

    if (error) {
      console.error(`‚ùå Erro ao inserir ${sumula.title}:`, error);
    } else {
      console.log(`‚úÖ ${sumula.title} inserida`);
    }
  }
}

/**
 * Importa artigos principais dos c√≥digos
 */
async function importMainCodes(): Promise<void> {
  console.log('üìö Importando artigos principais dos c√≥digos...');
  
  const codeArticles = [
    // C√≥digo Civil
    {
      law_id: 'cc_2002',
      article_number: 'Art. 1¬∫',
      title: 'Capacidade Civil',
      content: 'Toda pessoa √© capaz de direitos e deveres na ordem civil.'
    },
    {
      law_id: 'cc_2002',
      article_number: 'Art. 2¬∫',
      title: 'In√≠cio da Personalidade Civil',
      content: 'A personalidade civil da pessoa come√ßa do nascimento com vida; mas a lei p√µe a salvo, desde a concep√ß√£o, os direitos do nascituro.'
    },
    // C√≥digo Penal
    {
      law_id: 'cp_1940',
      article_number: 'Art. 1¬∫',
      title: 'Anterioridade da Lei',
      content: 'N√£o h√° crime sem lei anterior que o defina. N√£o h√° pena sem pr√©via comina√ß√£o legal.'
    },
    {
      law_id: 'cp_1940',
      article_number: 'Art. 2¬∫',
      title: 'Lei Penal no Tempo',
      content: 'Ningu√©m pode ser punido por fato que lei posterior deixa de considerar crime, cessando em virtude dela a execu√ß√£o e os efeitos penais da senten√ßa condenat√≥ria.'
    }
  ];

  for (const article of codeArticles) {
    const { error } = await supabase
      .from('law_articles')
      .upsert({
        law_id: article.law_id,
        article_number: article.article_number,
        title: article.title,
        content: article.content,
        hierarchy_level: 1,
        metadata: {
          source: 'manual_import',
          imported_at: new Date().toISOString()
        }
      });

    if (error) {
      console.error(`‚ùå Erro ao inserir ${article.article_number}:`, error);
    } else {
      console.log(`‚úÖ ${article.article_number} inserido`);
    }
  }
}

/**
 * Fun√ß√£o principal
 */
async function main(): Promise<void> {
  try {
    await importEssentialLegalData();
    console.log('üéâ Importa√ß√£o conclu√≠da com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro durante a importa√ß√£o:', error);
    process.exit(1);
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  main();
}

