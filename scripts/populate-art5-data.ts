import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://kpqcynbzoqdauyyjacwu.supabase.co'
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtwcWN5bmJ6b3FkYXV5eWphY3d1Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njg1NzY3NCwiZXhwIjoyMDcyNDMzNjc0fQ.fz0c5maHdX1SbxWlFR4CePIvdEnta6nGzfGQryYLe-s'

const supabase = createClient(supabaseUrl, supabaseKey)

async function populateArt5Data() {
  console.log('üìö Populando dados do Art. 5¬∫ CF/88...\n')

  try {
    // Primeiro, verificar se j√° existe uma lei da Constitui√ß√£o
    const { data: existingLaw, error: checkError } = await supabase
      .from('laws')
      .select('id')
      .eq('title', 'Constitui√ß√£o Federal de 1988')
      .eq('article', 'Art. 5¬∫')
      .single()

    let lawId = existingLaw?.id

    if (!lawId) {
      // Criar nova lei para o Art. 5¬∫
      const { data: newLaw, error: lawError } = await supabase
        .from('laws')
        .insert({
          title: 'Constitui√ß√£o Federal de 1988',
          article: 'Art. 5¬∫',
          content: 'Todos s√£o iguais perante a lei, sem distin√ß√£o de qualquer natureza, garantindo-se aos brasileiros e aos estrangeiros residentes no Pa√≠s a inviolabilidade do direito √† vida, √† liberdade, √† igualdade, √† seguran√ßa e √† propriedade, nos termos seguintes: I - homens e mulheres s√£o iguais em direitos e obriga√ß√µes, nos termos desta Constitui√ß√£o; II - ningu√©m ser√° obrigado a fazer ou deixar de fazer alguma coisa sen√£o em virtude de lei; III - ningu√©m ser√° submetido a tortura nem a tratamento desumano ou degradante; IV - √© livre a manifesta√ß√£o do pensamento, sendo vedado o anonimato; V - √© assegurado o direito de resposta, proporcional ao agravo, al√©m da indeniza√ß√£o por dano material, moral ou √† imagem...',
          type: 'constitutional',
          source: 'Planalto',
          url: 'https://www.planalto.gov.br/ccivil_03/constituicao/constituicao.htm'
        })
        .select('id')
        .single()

      if (lawError) {
        console.error('‚ùå Erro ao criar lei:', lawError)
        return
      }

      lawId = newLaw.id
      console.log('‚úÖ Lei do Art. 5¬∫ criada:', lawId)
    } else {
      console.log('‚úÖ Lei do Art. 5¬∫ j√° existe:', lawId)
    }

    // Criar chunks para o Art. 5¬∫
    const art5Chunks = [
      {
        law_id: lawId,
        content: 'Art. 5¬∫ Todos s√£o iguais perante a lei, sem distin√ß√£o de qualquer natureza, garantindo-se aos brasileiros e aos estrangeiros residentes no Pa√≠s a inviolabilidade do direito √† vida, √† liberdade, √† igualdade, √† seguran√ßa e √† propriedade.',
        metadata: { article: '5', section: 'caput' }
      },
      {
        law_id: lawId,
        content: 'Art. 5¬∫, I - homens e mulheres s√£o iguais em direitos e obriga√ß√µes, nos termos desta Constitui√ß√£o.',
        metadata: { article: '5', inciso: 'I' }
      },
      {
        law_id: lawId,
        content: 'Art. 5¬∫, II - ningu√©m ser√° obrigado a fazer ou deixar de fazer alguma coisa sen√£o em virtude de lei.',
        metadata: { article: '5', inciso: 'II' }
      },
      {
        law_id: lawId,
        content: 'Art. 5¬∫, III - ningu√©m ser√° submetido a tortura nem a tratamento desumano ou degradante.',
        metadata: { article: '5', inciso: 'III' }
      },
      {
        law_id: lawId,
        content: 'Art. 5¬∫, IV - √© livre a manifesta√ß√£o do pensamento, sendo vedado o anonimato.',
        metadata: { article: '5', inciso: 'IV' }
      },
      {
        law_id: lawId,
        content: 'Art. 5¬∫, V - √© assegurado o direito de resposta, proporcional ao agravo, al√©m da indeniza√ß√£o por dano material, moral ou √† imagem.',
        metadata: { article: '5', inciso: 'V' }
      }
    ]

    // Inserir chunks
    const { data: chunks, error: chunksError } = await supabase
      .from('law_chunks')
      .insert(art5Chunks)
      .select('id')

    if (chunksError) {
      console.error('‚ùå Erro ao inserir chunks:', chunksError)
    } else {
      console.log(`‚úÖ ${chunks?.length || 0} chunks do Art. 5¬∫ inseridos`)
    }

    // Verificar se a busca funciona agora
    console.log('\nüîç Testando busca por "Art. 5¬∫ CF/88":')
    const { data: searchResults, error: searchError } = await supabase
      .from('law_chunks')
      .select('*')
      .ilike('content', '%Art. 5¬∫%')
      .limit(3)

    if (searchError) {
      console.error('‚ùå Erro na busca:', searchError)
    } else {
      console.log(`‚úÖ Resultados encontrados: ${searchResults?.length || 0}`)
      searchResults?.forEach(result => {
        console.log(`   - ${result.content?.substring(0, 80)}...`)
      })
    }

  } catch (error) {
    console.error('‚ùå Erro geral:', error)
  }
}

populateArt5Data()

